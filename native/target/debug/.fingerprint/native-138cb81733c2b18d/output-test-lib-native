{"message":"the trait bound `api::Platform: IntoIntoDart<_>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/bridge_generated.rs","byte_start":511,"byte_end":515,"line_start":26,"line_end":26,"column_start":30,"column_end":34,"is_primary":true,"text":[{"text":"\tFLUTTER_RUST_BRIDGE_HANDLER.wrap(","highlight_start":30,"highlight_end":34}],"label":"the trait `IntoIntoDart<_>` is not implemented for `api::Platform`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `IntoIntoDart<D>`:\n  <() as IntoIntoDart<()>>\n  <(A, B) as IntoIntoDart<(AD, BD)>>\n  <(A, B, C) as IntoIntoDart<(AD, BD, CD)>>\n  <(A, B, C, D) as IntoIntoDart<(AD, BD, CD, DD)>>\n  <(A, B, C, D, E) as IntoIntoDart<(AD, BD, CD, DD, ED)>>\n  <Box<T> as IntoIntoDart<T>>\n  <DartCObject as IntoIntoDart<DartCObject>>\n  <DartOpaque as IntoIntoDart<DartOpaque>>\nand 22 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `wrap`","code":null,"level":"note","spans":[{"file_name":"/home/gutenfries/.cargo/registry/src/index.crates.io-6f17d22bba15001f/flutter_rust_bridge-1.79.0/src/handler.rs","byte_start":1709,"byte_end":1713,"line_start":47,"line_end":47,"column_start":8,"column_end":12,"is_primary":false,"text":[{"text":"    fn wrap<PrepareFn, TaskFn, TaskRet, D>(&self, wrap_info: WrapInfo, prepare: PrepareFn)","highlight_start":8,"highlight_end":12}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/gutenfries/.cargo/registry/src/index.crates.io-6f17d22bba15001f/flutter_rust_bridge-1.79.0/src/handler.rs","byte_start":1959,"byte_end":1974,"line_start":51,"line_end":51,"column_start":18,"column_end":33,"is_primary":true,"text":[{"text":"        TaskRet: IntoIntoDart<D>,","highlight_start":18,"highlight_end":33}],"label":"required by this bound in `Handler::wrap`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `api::Platform: IntoIntoDart<_>` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bridge_generated.rs:26:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    FLUTTER_RUST_BRIDGE_HANDLER.wrap(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `IntoIntoDart<_>` is not implemented for `api::Platform`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `IntoIntoDart<D>`:\u001b[0m\n\u001b[0m             <() as IntoIntoDart<()>>\u001b[0m\n\u001b[0m             <(A, B) as IntoIntoDart<(AD, BD)>>\u001b[0m\n\u001b[0m             <(A, B, C) as IntoIntoDart<(AD, BD, CD)>>\u001b[0m\n\u001b[0m             <(A, B, C, D) as IntoIntoDart<(AD, BD, CD, DD)>>\u001b[0m\n\u001b[0m             <(A, B, C, D, E) as IntoIntoDart<(AD, BD, CD, DD, ED)>>\u001b[0m\n\u001b[0m             <Box<T> as IntoIntoDart<T>>\u001b[0m\n\u001b[0m             <DartCObject as IntoIntoDart<DartCObject>>\u001b[0m\n\u001b[0m             <DartOpaque as IntoIntoDart<DartOpaque>>\u001b[0m\n\u001b[0m           and 22 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `wrap`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/gutenfries/.cargo/registry/src/index.crates.io-6f17d22bba15001f/flutter_rust_bridge-1.79.0/src/handler.rs:51:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn wrap<PrepareFn, TaskFn, TaskRet, D>(&self, wrap_info: WrapInfo, prepare: PrepareFn)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this associated function\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        TaskRet: IntoIntoDart<D>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Handler::wrap`\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0277`.\u001b[0m\n"}
